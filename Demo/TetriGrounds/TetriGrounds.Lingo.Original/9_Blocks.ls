property myBlocks,myWidth,myHeightproperty myGfx--pointerproperty myScoreManager -- pointerproperty myFinishedBlocks,myFinishedBlocksHori,myFinishedBlocksVertproperty myNmbrTypeson new me,_Gfx,_ScoreManager,_width,_height  myGfx = _Gfx  myScoreManager = _ScoreManager  --  Block = script("Block").new(myGfx)  me.InitGrid(_width,_height)  me.CreateStartLines()    return meendon InitGrid me,_width,_height  if voidp(myBlocks) then myBlocks = []  repeat with j = 1 to _width    myBlocks.append([])    repeat with i = 1 to _height      myBlocks[j].append([])    end repeat  end repeat  myWidth = _width  myHeight = _heightendon CreateStartLines me  myNmbrTypes = 7  NmbrLines = value(member("T_StartLines").text)  if NmbrLines>myHeight-5 then NmbrLines = myHeight-5  if NmbrLines="" then NmbrLines=0    repeat with yy= myHeight down to myHeight-NmbrLines+1    Emptyy = false    repeat with xx= 1 to myWidth-1            _type = random(myNmbrTypes+myNmbrTypes)if Emptyy = false and xx=myWidth-1 then _type=myNmbrTypes+1if _type > myNmbrTypes thenEmptyy = trueelseme.NewBlock(xx,yy,_type)end ifend repeatend repeatendon NewBlock me,_x,_y,_type  if _y =0 then return false  if voidp(myBlocks[_x][_y]) then exit  myBlocks[_x][_y] = script("Block").new(myGfx,_type)  myBlocks[_x][_y].createBlock()  myGfx.PositionBlock(myBlocks[_x][_y].getSpriteNum(),_x,_y)  return trueendon IsBlock me,_x,_y  if _y<=0 then return true  if _x<=0 then return true  if _x>myWidth then return true  if _y>myHeight then return true  if myBlocks[_x][_y] <> [] then    return true  else    return false  end ifendon FullHorizontal me,_y  repeat with i= 1 to myWidth-1    if myBlocks[i][_y] = [] then      return false      exit     end if  end repeat  return trueendon RemoveHorizontal me,_y  myScoreManager.LineRemoved()  repeat with i= 1 to myWidth-1    if myBlocks[i][_y] <> [] then      myBlocks[i][_y].DestroyAnim()      myBlocks[i][_y]= 0      myBlocks[i][_y]= []    end if  end repeat  -- fall down all the blox  repeat with j= _y down to 2    repeat with i= 1 to myWidth-1      if myBlocks[i][j-1]<> [] then        myBlocks[i][j] =myBlocks[i][j-1]        myGfx.PositionBlock(myBlocks[i][j].getSpriteNum(),i,j)        myBlocks[i][j-1]= 0        myBlocks[i][j-1]= []      end if    end repeat  end repeat  -- redo an horizontalcheck  check = me.FullHorizontal(_y)  if check = true then me.RemoveHorizontal(_y)end-- function that is executed on the end of the gameon FinishedBlocks me  myFinishedBlocks = true  myFinishedBlocksVert = 1  myFinishedBlocksHori = 1  if the actorlist.getpos(me) =0 then add the actorlist(me)endon stepframe me  if myFinishedBlocks = true then    repeat with myFinishedBlocksHori=1 to  myBlocks.count then      if myFinishedBlocksVert<=myBlocks[myFinishedBlocksHori].count then        if myBlocks[myFinishedBlocksHori][myFinishedBlocksVert]<> [] then          myBlocks[myFinishedBlocksHori][myFinishedBlocksVert].FinishBlock()         end if      else        myFinishedBlocks = false        deleteone the actorlist (me)      end if          end repeat    myFinishedBlocksVert = myFinishedBlocksVert +1  end ifendon destroyBlocks me  repeat with i=1 to myBlocks.count    repeat with j=1 to myBlocks[i].count      if myBlocks[i][j]<> [] then        myBlocks[i][j].destroy()        myBlocks[i][j]= 0        myBlocks[i][j]= []      end if    end repeat  end repeatendon destroy me  if the actorlist.getpos(me) <>0 then deleteone the actorlist (me)  me.destroyBlocks()  myGfx = 0  myScoreManager = 0end