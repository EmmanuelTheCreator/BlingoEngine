-- Copyright to EmmanuelTheCreator.com-- This file was written in 2005, yeah a lot has evolved since then :-)property myPlayerScore,myLevelproperty myNumberLinesRemoved,myNumberLinesTotproperty myLevelUp,myLevelUpNeededScore,myBlocksDropedproperty myOverScreenTexton new me  myPlayerScore = 0    myNumberLinesTot = 0  myLevelUpPlusScore = 0  -- find stqrt level  myLevel = value(member("T_StartLevel").text)  myLevelUpNeededScore=20*(myLevel+1)  me.updateGfxScore()  myTexts = []  me.NewText("Go!")  me.refresh()  return meendon refresh me  case myNumberLinesRemoved of    1:me.LineRemoved1()    2:me.LineRemoved2()    3:me.LineRemoved3()    4:me.LineRemoved4()  end case  myNumberLinesRemoved = 0  -- check fot level up (its the number of blocks droped)  if myBlocksDroped>myLevelUpNeededScore  then     sendsprite(22,#startAnim)    myLevelUp =true    myLevel = myLevel+1    me.NewText("Level "&myLevel&" !!")    myLevelUpNeededScore =myLevelUpNeededScore +20 -- this is the score needed to go a level up  end if  me.updateGfxScore()  member("T_data").text = "Level "&myLevel   --  member("T_data").text = "Blocks = "&string(myBlocksDroped)&return&"NeededBlocks = "&myLevelUpNeededScore&return&\" Lines Removed = "&myNumberLinesTot&return&"myLevel = "&myLevel end------------------------------------------on LineRemoved1 me  myPlayerScore=myPlayerScore+5 +myLevel endon LineRemoved2 me  me.NewText("2 Lines Removed!!")  myPlayerScore=myPlayerScore+12+myLevelendon LineRemoved3 me  me.NewText("3 Lines Removed!!")  myPlayerScore=myPlayerScore+20+myLevelendon LineRemoved4 me  me.NewText("Wooow, 4 Lines Removed!!")  myPlayerScore=myPlayerScore+30+myLevelend------------------------------------------on AddDropedBlock me  myBlocksDroped = myBlocksDroped +1endon LineRemoved me  myNumberLinesRemoved = myNumberLinesRemoved +1  myNumberLinesTot = myNumberLinesTot +1endon BlockFrozen me  myPlayerScore=myPlayerScore+1  me.refresh()endon updateGfxScore me  member("T_Score").text = string(myPlayerScore)endon GetLevelup me  temp = myLevelUp  myLevelUp = false  return tempendon GameFinished me  me.NewText("You're Terminated....")endon GetLevel me  return myLevelendon GetScore me  return myPlayerScoreend-----------------------------on NewText me,_text  if voidp(myOverScreenText) then myOverScreenText =[]  myOverScreenText.append(script("OverScreenText").new(130,_text,me))endon TextFinished me,obj  _pos = myOverScreenText.getpos(obj)  myOverScreenText[_pos].destroy()  myOverScreenText.deleteone (obj)endon destroyoverscreenTxt me  repeat with i=1 to myOverScreenText.count    myOverScreenText[i].destroy()    myOverScreenText[i]=0  end repeat  myOverScreenText =[]end-----------------------------on destroy me  me.destroyoverscreenTxt()end
property myNumberLinesRemoved,myNumberLinesTotproperty myLevelUp,myLevelUpNeededScore,myBlocksDropedproperty myOverScreenTexton new me  myPlayerScore = 0    myNumberLinesTot = 0  myLevelUpPlusScore = 0  -- find stqrt level  myLevel = value(member("T_StartLevel").text)  myLevelUpNeededScore=20*(myLevel+1)  me.updateGfxScore()  myTexts = []  me.NewText("Go!")  me.refresh()  return meendon refresh me  case myNumberLinesRemoved of    1:me.LineRemoved1()    2:me.LineRemoved2()    3:me.LineRemoved3()    4:me.LineRemoved4()  end case  myNumberLinesRemoved = 0  -- check fot level up (its the number of blocks droped)  if myBlocksDroped>myLevelUpNeededScore  then     sendsprite(22,#startAnim)    myLevelUp =true    myLevel = myLevel+1    me.NewText("Level "&myLevel&" !!")    myLevelUpNeededScore =myLevelUpNeededScore +20 -- this is the score needed to go a level up  end if  me.updateGfxScore()  member("T_data").text = "Level "&myLevel   --  member("T_data").text = "Blocks = "&string(myBlocksDroped)&return&"NeededBlocks = "&myLevelUpNeededScore&return&\" Lines Removed = "&myNumberLinesTot&return&"myLevel = "&myLevel end------------------------------------------on LineRemoved1 me  myPlayerScore=myPlayerScore+5 +myLevel endon LineRemoved2 me  me.NewText("2 Lines Removed!!")  myPlayerScore=myPlayerScore+12+myLevelendon LineRemoved3 me  me.NewText("3 Lines Removed!!")  myPlayerScore=myPlayerScore+20+myLevelendon LineRemoved4 me  me.NewText("Wooow, 4 Lines Removed!!")  myPlayerScore=myPlayerScore+30+myLevelend------------------------------------------on AddDropedBlock me  myBlocksDroped = myBlocksDroped +1endon LineRemoved me  myNumberLinesRemoved = myNumberLinesRemoved +1  myNumberLinesTot = myNumberLinesTot +1endon BlockFrozen me  myPlayerScore=myPlayerScore+1  me.refresh()endon updateGfxScore me  member("T_Score").text = string(myPlayerScore)endon GetLevelup me  temp = myLevelUp  myLevelUp = false  return tempendon GameFinished me  me.NewText("You're Terminated....")endon GetLevel me  return myLevelendon GetScore me  return myPlayerScoreend-----------------------------on NewText me,_text  if voidp(myOverScreenText) then myOverScreenText =[]  myOverScreenText.append(script("OverScreenText").new(130,_text,me))endon TextFinished me,obj  _pos = myOverScreenText.getpos(obj)  myOverScreenText[_pos].destroy()  myOverScreenText.deleteone (obj)endon destroyoverscreenTxt me  repeat with i=1 to myOverScreenText.count    myOverScreenText[i].destroy()    myOverScreenText[i]=0  end repeat  myOverScreenText =[]end-----------------------------on destroy me  me.destroyoverscreenTxt()end